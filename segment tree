void build(int ind,int low,int high,int arr[],int seg[]){
    if(low==high){
        seg[ind]=arr[low];
        return;
    }
    int mid=(low+high)/2;
    build((2*ind+1),low,mid,arr,seg);
    build((2*ind+2),mid+1,high,arr,seg);
    seg[ind]=min(seg[2*ind+1],seg[2*ind+2]);

}

int query(int ind,int low,int high,int l,int r,int seg[]){
    if(r<low||high<l)
    return INT_MAX;
    if(low>=l&&high<=r)
    return seg[ind];
    int mid=(low+high)/2;
    int left=query(2*ind+1,low,mid,l,r,seg);
    int right=query(2*ind+2,mid+1,high,l,r,seg);
    return min(left,right);
}


void update(int ind,int low,int high,int i,int val,int seg[]){
    if(low==high){
        seg[ind]=val;
        return;
    }
    int mid=(low+high)/2;
    if(i<=mid)
    update(2*ind+1,low,mid,i,val,seg);
    else
    update(2*ind+2,mid+1,high,i,val,seg);

    seg[ind]=min(seg[2*ind+1],seg[2*ind+2]);
}
